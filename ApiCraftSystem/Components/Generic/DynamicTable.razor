@page "/Data-Craft"
@using ApiCraftSystem.Components.Shared
@using ApiCraftSystem.Helper.Enums
@using Microsoft.AspNetCore.Authorization
@inherits DynamicTableBase
@attribute [StreamRendering]
@rendermode InteractiveServer
@attribute [Authorize]

<script src="js/site.js"></script>


@if (submitted != null && submitted == true)
{
    <div class="alert alert-success mt-3">Filter submitted successfully!</div>
}

@if (submitted != null && submitted == false)
{
    <div class="alert alert-danger mt-3">Internal Server Error. Please call administrator</div>
}



<div class="card">
    <div class="card-body">
        <h5 class="card-title">Data Craft Filter</h5>
        <EditForm Model="DataCraftForm" OnValidSubmit="@LoadData" FormName="DataCraftForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="connectionString" class="form-label">Connection String</label>
                <InputText @bind-Value="DataCraftForm.ConnectionString" class="form-control" />
                <ValidationMessage For="@(() => DataCraftForm.ConnectionString)" />
            </div>

            <div class="mb-3">
                <label for="provider" class="form-label">Provider</label>
                <InputSelect id="provider" class="form-select" @bind-Value="DataCraftForm.SelectedProvider">
                    <option value="">-- Select Provider --</option>
                    @foreach (var provider in Enum.GetValues<DatabaseType>())
                    {
                        <option value="@provider">@provider</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => DataCraftForm.SelectedProvider)" />
            </div>

            <div class="mb-3">
                <label for="tableName" class="form-label">Table Name</label>
                <InputText id="tableName" class="form-control" @bind-Value="DataCraftForm.TableName" />
                <ValidationMessage For="@(() => DataCraftForm.TableName)" />
            </div>

            <button class="btn btn-success" type="submit" disabled="@(IsLoading)">
                @if (IsLoading)
                {
                    <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>

                }

                Submit
            </button>
        </EditForm>

       

    </div>
</div>


@if (Data.Any())
{
    <button class="btn btn-success" @onclick="ExportToExcel" style="margin-top:10px;margin-bottom:10">
        <i class="bi bi-cloud-download"></i>
    </button>

    @if (IsLoading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
   

    <div class="card" style="margin-top:10px">
    
        <div class="card-body">

          

            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        @foreach (var header in Headers)
                        {
                            if (header.ToLower() != "sid" && header.ToLower() != "rownum")
                            {
                                <th @onclick="() => SortByColumn(header)">@header @(SortColumn == header ? (SortAscending ? "▲" : "▼") : "")</th>

                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (IDictionary<string, object> row in Data)
                    {
                        <tr>
                            @foreach (var header in Headers)
                            {
                                if (header.ToLower() != "sid" && header.ToLower() != "rownum")
                                {
                                    <td>@(row.TryGetValue(header, out var val) ? val : null)</td>

                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>

            <nav>
                <ul class="pagination">
                    <li class="page-item @(PageIndex == 1 ? "disabled" : "")">
                        <button class="page-link" @onclick="PrevPage">Previous</button>
                    </li>

                    @if (TotalPages <= 10)
                    {
                        @for (int i = 1; i <= TotalPages; i++)
                        {
                            <li class="page-item @(PageIndex == i ? "active" : "")">
                                <button class="page-link" @onclick="() => GoToPage(i)">@i</button>
                            </li>
                        }
                    }
                    else
                    {
                        // Show first page
                        <li class="page-item @(PageIndex == 1 ? "active" : "")">
                            <button class="page-link" @onclick="() => GoToPage(1)">1</button>
                        </li>

                        // Show "..." before current range
                        @if (PageIndex > 4)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }

                        // Show pages around the current page
                        @for (int i = Math.Max(2, PageIndex - 2); i <= Math.Min(TotalPages - 1, PageIndex + 2); i++)
                        {
                            <li class="page-item @(PageIndex == i ? "active" : "")">
                                <button class="page-link" @onclick="() => GoToPage(i)">@i</button>
                            </li>
                        }

                        // Show "..." after current range
                        @if (PageIndex < TotalPages - 3)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }

                        // Show last page
                        <li class="page-item @(PageIndex == TotalPages ? "active" : "")">
                            <button class="page-link" @onclick="() => GoToPage(TotalPages)">@TotalPages</button>
                        </li>
                    }

                    <li class="page-item @(PageIndex == TotalPages ? "disabled" : "")">
                        <button class="page-link" @onclick="NextPage">Next</button>
                    </li>
                </ul>

                <span class="fw-bold fs-8 text-secondary">Total Count: @TotalCount</span>
            </nav>

        </div>
    </div>


}
